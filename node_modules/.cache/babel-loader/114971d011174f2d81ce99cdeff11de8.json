{"ast":null,"code":"var _jsxFileName = \"/Users/clrblnd/Documents/Springboard/career_track/unit-39-reactjs-fundamentals/10-custom-hooks/react-cards-pokemon/src/PlayingCard/PlayingCardList.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\nimport uuid from \"uuid\"; // import axios from \"axios\";\n\nimport { useAxios } from \"../hooks\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardTable() {\n  _s();\n\n  const [cards, setCards] = useAxios(\"cards\", \"https://deckofcardsapi.com/api/deck/new/draw/\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setCards,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        id: uuid(),\n        front: card.image\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardTable, \"IDPaOJgXTd7ZWEQOWt1Shclvewo=\", false, function () {\n  return [useAxios];\n});\n\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["uuid","useAxios","PlayingCard","CardTable","cards","setCards","map","card","image","id","defaultProps"],"sources":["/Users/clrblnd/Documents/Springboard/career_track/unit-39-reactjs-fundamentals/10-custom-hooks/react-cards-pokemon/src/PlayingCard/PlayingCardList.js"],"sourcesContent":["// import React, { useState } from \"react\";\nimport uuid from \"uuid\";\n// import axios from \"axios\";\nimport { useAxios } from \"../hooks\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n  const [cards, setCards] = useAxios(\n    \"cards\",\n    \"https://deckofcardsapi.com/api/deck/new/draw/\"\n  );\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={setCards}>Add a playing card!</button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map((card) => (\n          <PlayingCard id={uuid()} key={card.id} front={card.image} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB,C,CACA;;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,uBAAP;AAEA;AACA;;;;AACA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAChC,OADgC,EAEhC,+CAFgC,CAAlC;EAIA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBACE;QAAQ,OAAO,EAAEI,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAK,SAAS,EAAC,2BAAf;MAAA,UACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,QAAC,WAAD;QAAa,EAAE,EAAEP,IAAI,EAArB;QAAuC,KAAK,EAAEO,IAAI,CAACC;MAAnD,GAA8BD,IAAI,CAACE,EAAnC;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAlBQN,S;UACmBF,Q;;;KADnBE,S;AAoBTA,SAAS,CAACO,YAAV,GAAyB,EAAzB;AAEA,eAAeP,SAAf"},"metadata":{},"sourceType":"module"}
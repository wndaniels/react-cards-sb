{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFlip = function () {\n  _s();\n\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [state, setState] = useState(initialState);\n\n  const toggleFlip = () => {\n    setState(state => !state);\n  };\n\n  return [state, toggleFlip];\n};\n\n_s(useFlip, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n\nfunction useAxios(keyInLS, baseUrl) {\n  _s2();\n\n  const [responses, setResponses] = useState(keyInLS);\n\n  const addResponseData = async function () {\n    let formatter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data => data;\n    let restOfUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const response = await axios.get(`${baseUrl}${restOfUrl}`);\n    setResponses(data => [...data, formatter(response.data)]);\n  };\n\n  const clearResponses = () => setResponses([]);\n\n  return [responses, addResponseData, clearResponses];\n}\n\n_s2(useAxios, \"TeYlDyXpZF0Oj9XgWfKweB4doys=\");\n\nexport { useFlip, useAxios };","map":{"version":3,"names":["useState","axios","useFlip","initialState","state","setState","toggleFlip","useAxios","keyInLS","baseUrl","responses","setResponses","addResponseData","formatter","data","restOfUrl","response","get","clearResponses"],"sources":["/Users/clrblnd/Documents/Springboard/career_track/unit-39-reactjs-fundamentals/10-custom-hooks/react-cards-pokemon/src/hooks.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFlip = (initialState = true) => {\n  const [state, setState] = useState(initialState);\n  const toggleFlip = () => {\n    setState((state) => !state);\n  };\n  return [state, toggleFlip];\n};\n\nfunction useAxios(keyInLS, baseUrl) {\n  const [responses, setResponses] = useState(keyInLS);\n\n  const addResponseData = async (\n    formatter = (data) => data,\n    restOfUrl = \"\"\n  ) => {\n    const response = await axios.get(`${baseUrl}${restOfUrl}`);\n    setResponses((data) => [...data, formatter(response.data)]);\n  };\n\n  const clearResponses = () => setResponses([]);\n\n  return [responses, addResponseData, clearResponses];\n}\n\nexport { useFlip, useAxios };\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,YAAyB;EAAA;;EAAA,IAAxBC,YAAwB,uEAAT,IAAS;EACvC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,YAAD,CAAlC;;EACA,MAAMG,UAAU,GAAG,MAAM;IACvBD,QAAQ,CAAED,KAAD,IAAW,CAACA,KAAb,CAAR;EACD,CAFD;;EAGA,OAAO,CAACA,KAAD,EAAQE,UAAR,CAAP;AACD,CAND;;GAAMJ,O;;AAQN,SAASK,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAACQ,OAAD,CAA1C;;EAEA,MAAMI,eAAe,GAAG,kBAGnB;IAAA,IAFHC,SAEG,uEAFUC,IAAD,IAAUA,IAEnB;IAAA,IADHC,SACG,uEADS,EACT;IACH,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAER,OAAQ,GAAEM,SAAU,EAAjC,CAAvB;IACAJ,YAAY,CAAEG,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,SAAS,CAACG,QAAQ,CAACF,IAAV,CAAnB,CAAX,CAAZ;EACD,CAND;;EAQA,MAAMI,cAAc,GAAG,MAAMP,YAAY,CAAC,EAAD,CAAzC;;EAEA,OAAO,CAACD,SAAD,EAAYE,eAAZ,EAA6BM,cAA7B,CAAP;AACD;;IAdQX,Q;;AAgBT,SAASL,OAAT,EAAkBK,QAAlB"},"metadata":{},"sourceType":"module"}